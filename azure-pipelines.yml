<<<<<<< HEAD
trigger:
- main

pool:
  name: 'MyPC-AgentPool'  # Your self-hosted agent pool

variables:
- group: AzureSP  # Reference the variable group with SP credentials

# Path to your static app and output
- name: appLocation
  value: "."           # Directory of your static app
- name: outputLocation
  value: "build"       # Build output directory

- name: staticAppName
  value: "Ymy-first-static-site"  # Your Azure Static Web App name
- name: resourceGroup
  value: "my-first-static-site_group"  # Resource group name

steps:
- task: PowerShell@2
  displayName: 'Deploy Static Web App'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Logging in to Azure using service principal..."
      az login --service-principal -u $(azureSPAppId) -p $(azureSPPassword) --tenant $(azureTenantId)

      Write-Host "Building app (if needed)..."
      # Optional: add build commands if using Node.js/React/Vue
      # Example:
      # npm install
      # npm run build

      Write-Host "Deploying static app to Azure Static Web App..."
      az staticwebapp deploy `
        --name $(staticAppName) `
        --resource-group $(resourceGroup) `
        --source-location $(appLocation) `
        --output-location $(outputLocation)

      Write-Host "Deployment completed successfully!"
=======
# azure-pipelines.yml
trigger:
- main   # Runs pipeline on push to 'main'

pool:
  name: 'MyPC-AgentPool'  # Your self-hosted agent

variables:
  # Optional: override this if you want to use a deployment token instead of service connection
  azure_static_web_apps_service_connection: 'AzureStaticWebAppConnection'

steps:
# Step 1: Prepare / echo (optional for static HTML)
- script: echo "Preparing static HTML site for deployment..."
  displayName: 'Prepare Site'

# Step 2: Copy files to staging directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy Files to Staging'

# Step 3: Publish artifacts (optional)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Artifacts'

# Step 4: Deploy to Azure Static Web App
- task: AzureStaticWebApp@0
  inputs:
    azure_static_web_apps_service_connection: '$(azure_static_web_apps_service_connection)'  # Service connection
    app_location: '.'                   # Path to your static site in repo
    output_location: ''                 # Leave blank for plain HTML
  displayName: 'Deploy to Azure Static Web App'
>>>>>>> dcccc55 (Initial commit: static web app files)
